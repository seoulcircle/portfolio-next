{"version":3,"file":"Button-TextButton-TextButton-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AChBA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;;;;;AAAA;;;;;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;;;;;AAAA;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AAEA;;;AAWA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AAGA;AAQA;AACA;AAAA;;AACA;AAAA;;;;;;AACA;AACA;AAAA;;;;;;;;;;;;AAIA;AACA;AAAA;AAAA;AACA;;;;;AAGA;AAEA;AAvBA;AAyBA","sources":["webpack://@portfolio/components/../../node_modules/.pnpm/lucide-react@0.484.0_react@19.1.0/node_modules/lucide-react/dist/esm/icons/arrow-right.js","webpack://@portfolio/components/../styles/theme.ts","webpack://@portfolio/components/../styles/tokens/colors.ts","webpack://@portfolio/components/../styles/tokens/index.ts","webpack://@portfolio/components/../styles/tokens/shadows.ts","webpack://@portfolio/components/../styles/tokens/spacing.ts","webpack://@portfolio/components/../styles/tokens/typography.ts","webpack://@portfolio/components/./Button/TextButton/TextButton.stories.tsx","webpack://@portfolio/components/./Button/TextButton/TextButton.styles.ts","webpack://@portfolio/components/./Button/TextButton/TextButton.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.484.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"m12 5 7 7-7 7\", key: \"xquz4c\" }]\n];\nconst ArrowRight = createLucideIcon(\"arrow-right\", __iconNode);\n\nexport { __iconNode, ArrowRight as default };\n//# sourceMappingURL=arrow-right.js.map\n","// src/styles/theme.ts\nimport \"@emotion/react\";\n\nexport const breakpoints = {\n  mobile: \"639px\",\n  tablet: \"800px\",\n  desktop: \"1024px\",\n};\n","export const colors = {\n  white: \"#FFFFFF\",\n  black: \"#000000\",\n  red: \"#c61a1a\",\n  gray: {\n    100: \"#F5F5F5\",\n    200: \"#EEEEEE\",\n    300: \"#E0E0E0\",\n    400: \"#BDBDBD\",\n    500: \"#9E9E9E\",\n    600: \"#757575\",\n    700: \"#616161\",\n    800: \"#424242\",\n    900: \"#212121\",\n  },\n  overlay: {\n    light: \"rgba(0, 0, 0, 0.2)\",\n    dark: \"rgba(0, 0, 0, 0.7)\",\n  },\n  glass: {\n    light: \"rgba(255, 255, 255, 0.2)\",\n    backdropFilter: \"blur(10px)\",\n    webkitBackdropFilter: \"blur(10px)\",\n  },\n} as const;\n","export * from \"./colors\";\nexport * from \"./spacing\";\nexport * from \"./typography\";\nexport * from \"./shadows\";\n","export const shadows = {\n  sm: \"0 1px 2px 0 rgba(0, 0, 0, 0.05)\",\n  md: \"0 4px 10px 0px rgba(0, 0, 0, 0.2)\",\n  lg: \"0 10px 15px -3px rgba(0, 0, 0, 0.2)\",\n  xl: \"0 20px 25px -5px rgba(0, 0, 0, 0.2)\",\n} as const;\n","export const spacing = {\n  xs: \"4px\",\n  sm: \"8px\",\n  md: \"16px\",\n  lg: \"24px\",\n  xl: \"32px\",\n  xxl: \"48px\",\n} as const;\n","export const typography = {\n  fontFamily: {\n    sans: 'system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n    mono: 'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace',\n  },\n  fontSize: {\n    xxs: \"10px\",\n    xs: \"12px\",\n    sm: \"14px\",\n    base: \"16px\",\n    lg: \"18px\",\n    xl: \"20px\",\n    xxl: \"24px\",\n  },\n  fontWeight: {\n    light: 300,\n    normal: 400,\n    medium: 500,\n    semibold: 600,\n    bold: 700,\n  },\n  lineHeight: {\n    tight: 1.25,\n    normal: 1.5,\n    relaxed: 1.75,\n  },\n} as const;\n","import { Meta, StoryObj } from \"@storybook/react\";\nimport TextButton from \"./TextButton\";\nimport { ArrowRight } from \"lucide-react\";\n\nconst meta: Meta<typeof TextButton> = {\n  title: \"Button/TextButton\",\n  component: TextButton,\n  tags: [\"autodocs\"], // addon-docsìš©\n  argTypes: {\n    variant: {\n      control: \"radio\",\n      options: [\"black\", \"white\"],\n    },\n    size: {\n      control: \"radio\",\n      options: [\"xs\", \"sm\", \"md\", \"lg\"],\n    },\n    icon: { control: false },\n    showIcon: { control: \"boolean\", name: \"icon\" },\n  },\n};\nexport default meta;\n\ntype Story = StoryObj<typeof TextButton>;\n\nexport const ToggleIcon: Story = {\n  args: {\n    children: \"DEMO\",\n    showIcon: true,\n  },\n  render: ({ showIcon, ...args }) => (\n    <TextButton\n      {...args}\n      icon={showIcon ? <ArrowRight size={18} /> : undefined}\n    />\n  ),\n};\n\nexport const Primary: Story = {\n  args: {\n    children: \"DEMO\",\n    variant: \"black\",\n    size: \"md\",\n    href: \"/\",\n    showIcon: true,\n  },\n  render: ({ showIcon, ...args }) => (\n    <TextButton\n      {...args}\n      icon={showIcon ? <ArrowRight size={18} /> : undefined}\n    />\n  ),\n};\n","import styled from \"@emotion/styled\";\nimport { breakpoints } from \"../../../styles/theme\";\nimport { colors, shadows, typography, spacing } from \"../../../styles/tokens\";\n\nexport const Button = styled.button<{\n  variant: \"black\" | \"white\";\n  size?: \"xs\" | \"sm\" | \"md\" | \"lg\";\n}>`\n  all: unset;\n  cursor: pointer;\n  border-radius: 9999px;\n  margin-top: 10px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  gap: ${spacing.sm};\n  box-shadow: ${shadows.md};\n  background-color: ${({ variant }) =>\n    variant === \"black\" ? colors.black : colors.white};\n  color: ${({ variant }) =>\n    variant === \"black\" ? colors.white : colors.black};\n  font-size: ${({ size }) => {\n    switch (size) {\n      case \"xs\":\n        return typography.fontSize.xs;\n      case \"sm\":\n        return typography.fontSize.sm;\n      case \"lg\":\n        return typography.fontSize.lg;\n      default:\n        return typography.fontSize.base;\n    }\n  }};\n\n  padding: ${({ size }) => {\n    switch (size) {\n      case \"xs\":\n        return \"4px 8px\";\n      case \"sm\":\n        return \"6px 12px\";\n      case \"lg\":\n        return \"12px 20px\";\n      default:\n        return \"10px 16px\";\n    }\n  }};\n  transition: background 0.2s ease, color 0.2s ease;\n  & span {\n    height: 20px;\n  }\n  @media (max-width: ${breakpoints.mobile}) {\n    margin-top: 10px;\n  }\n`;\n","import React from \"react\";\nimport * as S from \"./TextButton.styles\";\nimport Link from \"next/link\";\nimport { TextButtonProps } from \"./TextButton.types\";\n\nconst TextButton = ({\n  children,\n  icon,\n  iconPosition = \"right\",\n  href,\n  variant = \"black\",\n  ...props\n}: TextButtonProps) => {\n  const content = (\n    <S.Button variant={variant} {...props}>\n      {icon && iconPosition === \"left\" && <span>{icon}</span>}\n      {children}\n      {icon && iconPosition === \"right\" && <span>{icon}</span>}\n    </S.Button>\n  );\n\n  return href ? (\n    <Link href={href} passHref legacyBehavior>\n      {content}\n    </Link>\n  ) : (\n    content\n  );\n};\n\nexport default TextButton;\n"],"names":[],"sourceRoot":""}